name: SonarQube Scan Code

on:
  push:
    branches:
      - development


jobs:
  build:
    name: Build and analyze with SonarQube
    runs-on: ubuntu-latest
    
    steps:
      # Step 1: Check out the code
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      # Step 2: Set up Java (Specify the version you need here)
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'  # Choose Java distribution (temurin is from AdoptOpenJDK)
          java-version: '17'       # Specify the Java version
      
      - name: Check Connectivity
        run: |
          nc -zv sonarqube.z-unified.com 443


      - name: Install SSL Certificate in TrustStore
        run: |
          openssl s_client -showcerts -connect sonarqube.z-unified.com:443 </dev/null 2>/dev/null | openssl x509 -outform PEM > sonar_cert.pem
          sudo keytool -importcert -file sonar_cert.pem -alias sonar_cert -cacerts -storepass changeit -noprompt

      - name: Run SonarScanner CLI
        uses: sonarsource/sonarqube-scan-action@v3
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          #SONAR_SCANNER_OPTS: "-Dsonar.ssl.verify=false"
          SONAR_SCANNER_OPTS: "-Djavax.net.ssl.trustStore=$JAVA_HOME/lib/security/cacerts -Djavax.net.ssl.trustStorePassword=changeit"
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}